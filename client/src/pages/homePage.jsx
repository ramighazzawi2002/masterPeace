import React, { useState, useEffect } from "react";
import { Link } from "react-router-dom";
import { ChevronLeft, ChevronRight } from "lucide-react";
import axios from "axios";
import { BASE_URL } from "../config";
import HeritageChat from "../components/HeritageChat";

function HomePage() {
  const [currentSlide, setCurrentSlide] = useState(0);
  const [featuredWorkshops, setFeaturedWorkshops] = useState([]);
  const [featuredProducts, setFeaturedProducts] = useState([]);
  const [featuredArticles, setFeaturedArticles] = useState([]);

  const sliderItems = [
    {
      gradient:
        "bg-gradient-to-br from-customBrown via-customBrown/90 to-customBrown/80",
      pattern:
        "repeating-linear-gradient(45deg, rgba(255,255,255,0.05) 0px, rgba(255,255,255,0.05) 2px, transparent 2px, transparent 6px)",
      icon: "๐",
      title: "ููุงูุงุช ูููุฒุฉ",
      link: "/articles",
      description: "ุงูุชุดู ุฃุณุฑุงุฑ ุงูุชุฑุงุซ ุงูุฃุฑุฏูู ูู ุฎูุงู ููุงูุงุชูุง ุงูุดููุฉ",
      cta: "ุงูุฑุฃ ุงูุขู",
      animation: "animate-float",
    },
    {
      gradient:
        "bg-gradient-to-br from-customBrown via-customBrown/85 to-customBrown/70",
      pattern:
        "repeating-linear-gradient(-45deg, rgba(255,255,255,0.05) 0px, rgba(255,255,255,0.05) 2px, transparent 2px, transparent 6px)",
      icon: "๐ฏ",
      title: "ูุฑุดุงุช ุนูู",
      link: "/workshops",
      description: "ุดุงุฑู ูู ูุฑุดุงุช ุนูู ุชูุงุนููุฉ ูุชุนูู ุงูุญุฑู ุงูุชูููุฏูุฉ",
      cta: "ุงุญุฌุฒ ููุงูู",
      animation: "animate-bounce-slow",
    },
    {
      gradient:
        "bg-gradient-to-br from-customBrown via-customBrown/80 to-customBrown/60",
      pattern:
        "repeating-linear-gradient(90deg, rgba(255,255,255,0.05) 0px, rgba(255,255,255,0.05) 2px, transparent 2px, transparent 6px)",
      icon: "๐๏ธ",
      title: "ููุชุฌุงุชูุง",
      link: "/products",
      description: "ุชุณูู ููุชุฌุงุช ุญุฑููุฉ ุฃุตููุฉ ุตูุนุช ุจุฃูุฏู ููุงููู ูุญูููู",
      cta: "ุชุณูู ุงูุขู",
      animation: "animate-pulse-slow",
    },
  ];

  useEffect(() => {
    fetchHomePageData();
    const timer = setInterval(() => {
      setCurrentSlide(prev => (prev + 1) % sliderItems.length);
    }, 5000);
    return () => clearInterval(timer);
  }, []);

  const fetchHomePageData = async () => {
    try {
      const response = await axios.get(`${BASE_URL}/api/home`);
      const { featuredWorkshops, featuredProducts, featuredArticles } =
        response.data;
      setFeaturedWorkshops(featuredWorkshops);
      setFeaturedProducts(featuredProducts);
      setFeaturedArticles(featuredArticles);
    } catch (error) {
      console.error("Error fetching home page data:", error);
    }
  };

  const nextSlide = () => {
    setCurrentSlide(prev => (prev + 1) % sliderItems.length);
  };

  const prevSlide = () => {
    setCurrentSlide(
      prev => (prev - 1 + sliderItems.length) % sliderItems.length
    );
  };

  return (
    <div className="bg-gray-50">
      <div className="relative h-screen overflow-hidden">
        {sliderItems.map((item, index) => (
          <div
            key={index}
            className={`absolute inset-0 transition-all duration-1000 ${
              currentSlide === index ? "opacity-100 z-10" : "opacity-0 z-0"
            }`}
          >
            <div className={`relative h-full w-full ${item.gradient}`}>
              {/* Pattern overlay */}
              <div
                className="absolute inset-0 opacity-10"
                style={{ backgroundImage: item.pattern }}
              />

              {/* Animated background shapes */}
              <div className="absolute inset-0 overflow-hidden">
                <div className="absolute -left-10 top-1/4 w-40 h-40 bg-customBrown/20 rounded-full blur-3xl animate-float" />
                <div className="absolute right-1/4 top-1/3 w-60 h-60 bg-customBrown/20 rounded-full blur-3xl animate-pulse-slow" />
                <div className="absolute left-1/3 bottom-1/4 w-48 h-48 bg-customBrown/20 rounded-full blur-3xl animate-bounce-slow" />
              </div>

              {/* Content remains the same but with updated border colors */}
              <div className="absolute inset-0 flex items-center justify-center">
                <div className="relative text-center text-white p-8 max-w-3xl">
                  <div className={`text-6xl mb-6 ${item.animation}`}>
                    {item.icon}
                  </div>

                  {/* Traditional pattern border with customBrown */}
                  <div className="absolute inset-0 -m-8 border-2 border-customBrown/20 rounded-2xl">
                    <div className="absolute inset-0 scale-95 border border-customBrown/20 rounded-2xl" />
                  </div>

                  <h2 className="text-6xl font-bold mb-6 transform transition-all duration-700">
                    {item.title}
                  </h2>
                  <p className="text-xl mb-8 leading-relaxed">
                    {item.description}
                  </p>
                  <Link
                    to={item.link}
                    className="group relative inline-flex items-center px-8 py-3 overflow-hidden rounded-full bg-customBrown/20 backdrop-blur-sm text-white transition-all duration-300 hover:bg-customBrown/30"
                  >
                    <span className="relative group-hover:scale-105 transition-transform duration-300">
                      {item.cta}
                    </span>
                  </Link>
                </div>
              </div>
            </div>
          </div>
        ))}

        {/* Navigation buttons with improved z-index and pointer-events */}
        <button
          onClick={nextSlide}
          className="absolute left-4 top-1/2 -translate-y-1/2 bg-customBrown/20 backdrop-blur-md p-4 rounded-full hover:bg-customBrown/30 transition-all duration-300 group border border-customBrown/20 z-20 cursor-pointer"
          aria-label="Previous slide"
        >
          <ChevronLeft className="w-6 h-6 text-white group-hover:scale-110 transition-transform duration-300" />
        </button>
        <button
          onClick={prevSlide}
          className="absolute right-4 top-1/2 -translate-y-1/2 bg-customBrown/20 backdrop-blur-md p-4 rounded-full hover:bg-customBrown/30 transition-all duration-300 group border border-customBrown/20 z-20 cursor-pointer"
          aria-label="Next slide"
        >
          <ChevronRight className="w-6 h-6 text-white group-hover:scale-110 transition-transform duration-300" />
        </button>

        {/* Slide indicators with improved z-index and pointer-events */}
        <div className="absolute bottom-8 left-1/2 -translate-x-1/2 flex gap-3 z-20">
          {sliderItems.map((_, index) => (
            <button
              key={index}
              onClick={() => setCurrentSlide(index)}
              className={`h-2 rounded-full transition-all duration-500 backdrop-blur-sm cursor-pointer
                ${
                  currentSlide === index
                    ? "w-8 bg-white"
                    : "w-2 bg-customBrown/50 hover:bg-white/70"
                }`}
              aria-label={`Go to slide ${index + 1}`}
            />
          ))}
        </div>
      </div>

      <section className="max-w-7xl mx-auto px-4 py-16">
        <div className="bg-customYellow rounded-xl p-8 mb-16 shadow-lg">
          <h1 className="text-4xl font-bold text-center text-customBrown mb-6">
            ุงูุชุฑุงุซ ุงูุฃุฑุฏูู
          </h1>
          <p className="text-xl text-customBrown leading-relaxed text-justify">
            ุงูุชุฑุงุซ ุงูุฃุฑุฏูู ูู ูุฒูุฌ ุบูู ูู ุงูุชูุงููุฏ ูุงูุซูุงูุฉ ูุงูุตููุฏ ุนุจุฑ ุงููุฑูู.
            ูู ุฃุณูุงู ุนููุงู ุงููุงุจุถุฉ ุจุงูุญูุงุฉ ุฅูู ุงูููุงุธุฑ ุงูุทุจูุนูุฉ ุงูุณุงุญุฑุฉ ูู
            ุงูุจุชุฑุงุกุ ูุนูุณ ุงูุชุฑุงุซ ุงูุฃุฑุฏูู ุงุฑุชุจุงุทุงู ุนูููุงู ุจุชุงุฑูุฎู ูุดุนุจู. ุงุณุชูุดู
            ูู ุงูุชุทุฑูุฒ ุงูุฃุฑุฏููุ ูุชุฐูู ุงูุฃุทุจุงู ุงููุฐูุฐุฉ ูู ุงููุทุจุฎ ุงูุฃุฑุฏููุ ูุงูุชุดู
            ูู ุตูุงุนุฉ ุงููุณููุณุงุก. ุงูุถู ุฅูููุง ูู ุงูุงุญุชูุงู ุจุงูุชุฑุงุซ ุงูุฃุฑุฏููุ ุญูุซ ูู
            ุบุฑุฒุฉุ ูู ูููุฉุ ููู ูุตุฉ ุชุฑูู ุญูุงูุฉ ุงูุฃุฑุถ ุงูุชู ุดูููุง ุงูุฒูู ูุญูุธุชูุง ูู
            ูููุจ ุดุนุจูุง.
          </p>
        </div>

        <FeaturedSection
          title="ุฃุฎุฑ ุงููุฑุดุงุช"
          items={featuredWorkshops}
          linkPrefix="/workshopinfo"
        />

        <FeaturedSection
          title="ุฃุฎุฑ ุงูููุชุฌุงุช"
          items={featuredProducts}
          linkPrefix="/productinfo"
        />

        <FeaturedSection
          title="ุฃุฎุฑ ุงูููุงูุงุช"
          items={featuredArticles}
          linkPrefix="/articleinfo"
        />
      </section>
    </div>
  );
}

function FeaturedSection({ title, items, linkPrefix, name }) {
  return (
    <div className="mb-16">
      <h2 className="text-4xl font-bold text-center mb-8 text-customBrown">
        {title}
      </h2>
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {items.map((item, index) => (
          <div
            key={index}
            className="bg-white rounded-xl shadow-lg overflow-hidden transition-all duration-300 hover:shadow-xl hover:-translate-y-1"
          >
            <img
              src={`${BASE_URL}/uploads/${item.image}`}
              alt={item.title || item.name}
              className="w-full h-48 object-cover"
            />
            <div className="p-6">
              <h3 className="text-xl font-semibold text-customBrown mb-2">
                {item.title || item.name}
              </h3>
              {item.price && (
                <p className="text-gray-600 mb-2">ุงูุณุนุฑ: {item.price} ุฏ.ุฃ</p>
              )}
              <p className="text-gray-600 mb-4">{item.description}</p>
              <Link
                to={`${linkPrefix}/${item.id}`}
                className="inline-flex items-center text-customGreen hover:text-customBrown transition-colors duration-300"
              >
                {item.linkText || "ุงูุฑุฃ ุงููุฒูุฏ"}
                <ChevronLeft className="ml-1 w-4 h-4" />
              </Link>
            </div>
          </div>
        ))}
      </div>
    </div>
  );
}

export default HomePage;
